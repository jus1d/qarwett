package locale

import (
	"fmt"
	"math/rand"
	"time"
)

var PhrasesForFreeDayRU = []string{
	"<b>%d %s</b> - –¥–µ–Ω—å –±–µ–∑–¥–µ–ª—å–Ω–∏–∫",
	"<b>%d %s</b> –¥–∞–∂–µ –±—É–¥–∏–ª—å–Ω–∏–∫ –±—É–¥–µ—Ç —Å–ø–∞—Ç—å",
	"–ü–ª–∞–Ω –Ω–∞ <b>%d %s</b> - –Ω–µ –∏–º–µ—Ç—å –ø–ª–∞–Ω–æ–≤",
	"<b>%d %s</b> –º–æ–∂–Ω–æ –∏ –≤ –°–æ—á–∏ —Ä–≤–∞–Ω—É—Ç—å",
	"<b>%d %s</b> —Ä–∞–∑—Ä–µ—à–∞—é –ª–µ–Ω–∏—Ç—å—Å—è",
	"<b>%d %s</b> - –¥–µ–Ω—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, –∏—Å—Å–ª–µ–¥—É–π –∫—É–¥–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–µ–≤–∞—é—Ç—Å—è –≤—Ç–æ—Ä—ã–µ –Ω–æ—Å–∫–∏",
	"–•–æ—Ç—å <b>%d %s</b> –∏ –≤—ã—Ö–æ–¥–Ω–æ–π, —Ö–≤–∞—Ç–∏—Ç –Ω–∞ –¥–∏–≤–∞–Ω–µ –æ—Ç–ª–µ–∂–∏–≤–∞—Ç—å—Å—è",
}

var PhrasesForFreeDayEN = []string{
	"<b>%d %s</b> - a day of idleness",
	"<b>%d %s</b> even the alarm clock will be sleeping",
	"Plan for <b>%d %s</b> - just have no plans",
	"<b>%d %s</b> is a perfect day to head to Sochi",
	"<b>%d %s</b> - I allow you to be lazy",
	"<b>%d %s</b> - a day of exploration, investigate where the second socks constantly disappear",
	"Although it's <b>%d %s</b> off, stop lying on the couch",
}

func GetPhraseGreeting(languageCode string) string {
	switch languageCode {
	case RU:
		return "<b>–ü—Ä–∏–≤–µ—Ç, –∑–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ <s>–∏ –ø–æ–π—Ç–∏ –æ—Ç—Å—ã–ø–∞—Ç—å—Å—è</s></b>\n\n" +
			"üëá–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É"
	default:
		return "<b>Hello, here you can take a quick look at your schedule <s>and go get some sleep</s></b>\n\n" +
			"üëáJust type your group"
	}
}

func GetPhraseNoGroupFound(languageCode string) string {
	switch languageCode {
	case RU:
		return "‚òπÔ∏è–ü–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ—Ç –≥—Ä—É–ø–ø"
	default:
		return "‚òπÔ∏èThere are no groups at your request"
	}
}

func GetPhraseChooseGroup(languageCode string) string {
	switch languageCode {
	case RU:
		return "ü§î<b>–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É</b>"
	default:
		return "ü§î<b>Choose a group</b>"
	}
}

func GetPhraseNoScheduleFound(languageCode string) string {
	switch languageCode {
	case RU:
		return "üö®<b>–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!</b>"
	default:
		return "üö®<b>Can't found schedule!</b>"
	}
}

func GetPhraseNoChanges(languageCode string) string {
	switch languageCode {
	case RU:
		return "–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç"
	default:
		return "No changes"
	}
}

func GetPhraseForFreeDay(languageCode string, day int, month int) string {
	monthsRU := []string{"", "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "—Å–µ–Ω—Ç—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"}
	monthsEN := []string{"", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"}
	switch languageCode {
	case RU:
		return fmt.Sprintf(choice(PhrasesForFreeDayRU), day, monthsRU[month])
	default:
		return fmt.Sprintf(choice(PhrasesForFreeDayEN), day, monthsEN[month])
	}
}

func choice(arr []string) string {
	r := rand.New(rand.NewSource(time.Now().UnixNano()))
	idx := r.Intn(len(arr))
	return arr[idx]
}
